{
    "openapi": "3.0.0",
    "info": {
        "title": "kinoage",
        "description": "Documentation for kinoage admin dashboard and main site",
        "contact": {
            "email": "ayubxonnematov@gmail.com"
        },
        "version": "1.0.0"
    },
    "paths": {
        "/api/actor": {
            "get": {
                "tags": [
                    "Actors"
                ],
                "summary": "Get list of Actor",
                "description": "Returns list of Actor",
                "operationId": "indexActor",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Actor"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Actors"
                ],
                "summary": "Insert a new Actor",
                "description": "Insert a new Actor",
                "operationId": "storeActor",
                "requestBody": {
                    "description": "Actor to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/Actor"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Actor created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Actor"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation exception"
                    }
                }
            }
        },
        "/api/actor/{actor_id}": {
            "get": {
                "tags": [
                    "Actors"
                ],
                "summary": "Show a Actor from his Id",
                "description": "Show a Actor from his Id",
                "operationId": "showActor",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Actor--id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Actor"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Actor not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Actors"
                ],
                "summary": "Delete a Actor",
                "description": "Delete a Actor",
                "operationId": "destroyActor",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Actor--id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Actor"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "description": "Actor not found"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Actors"
                ],
                "summary": "Update an existing Actor",
                "description": "Update an existing Actor",
                "operationId": "updateActor",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Actor--id"
                    }
                ],
                "requestBody": {
                    "description": "Actor to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/Actor"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Actor"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Actor not found"
                    }
                }
            }
        },
        "login": {
            "post": {
                "tags": [
                    "login"
                ],
                "summary": "Insert a new User",
                "description": "Insert a new User",
                "operationId": "login",
                "parameters": [
                    {
                        "name": "email",
                        "in": "query",
                        "description": "insert your email",
                        "required": true
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "description": "insert your password",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation exception"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "register": {
            "post": {
                "tags": [
                    "login"
                ],
                "summary": "Insert a new User",
                "description": "Insert a new User",
                "operationId": "register",
                "parameters": [
                    {
                        "name": "email",
                        "in": "query",
                        "description": "insert your email",
                        "required": true
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "description": "insert your password",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation exception"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "reset-password": {
            "post": {
                "tags": [
                    "login"
                ],
                "summary": "resetPassword",
                "description": "resetPassword",
                "operationId": "resetPassword",
                "parameters": [
                    {
                        "name": "email",
                        "in": "query",
                        "description": "insert your email",
                        "required": true
                    },
                    {
                        "name": "code",
                        "in": "query",
                        "description": "insert your code",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation exception"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "logout": {
            "get": {
                "tags": [
                    "login"
                ],
                "summary": "logout ",
                "description": "account logout",
                "operationId": "logout",
                "responses": {
                    "200": {
                        "description": "User created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "check-user-token": {
            "get": {
                "tags": [
                    "login"
                ],
                "summary": "account",
                "description": "user account description",
                "operationId": "checkUserToken",
                "responses": {
                    "200": {
                        "description": "User created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "update-yourself": {
            "get": {
                "tags": [
                    "login"
                ],
                "summary": "updateYourself",
                "description": "user updateYourself description",
                "operationId": "updateYourself",
                "responses": {
                    "200": {
                        "description": "User created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/awards-photos": {
            "get": {
                "tags": [
                    "AwardsPhotos"
                ],
                "summary": "Get list of AwardsPhoto",
                "description": "Returns list of AwardsPhoto",
                "operationId": "indexAwardsPhoto",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AwardsPhoto"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "AwardsPhotos"
                ],
                "summary": "Insert a new AwardsPhoto",
                "description": "Insert a new AwardsPhoto",
                "operationId": "storeAwardsPhoto",
                "requestBody": {
                    "description": "AwardsPhoto to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/AwardsPhoto"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "AwardsPhoto created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/AwardsPhoto"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation exception"
                    }
                }
            }
        },
        "/api/awards-photos/{awardsphoto_id}": {
            "get": {
                "tags": [
                    "AwardsPhotos"
                ],
                "summary": "Show a AwardsPhoto from his Id",
                "description": "Show a AwardsPhoto from his Id",
                "operationId": "showAwardsPhoto",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/AwardsPhoto--id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/AwardsPhoto"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "AwardsPhoto not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "AwardsPhotos"
                ],
                "summary": "Delete a AwardsPhoto",
                "description": "Delete a AwardsPhoto",
                "operationId": "destroyAwardsPhoto",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/AwardsPhoto--id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/AwardsPhoto"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "description": "AwardsPhoto not found"
                    }
                }
            },
            "patch": {
                "tags": [
                    "AwardsPhotos"
                ],
                "summary": "Update an existing AwardsPhoto",
                "description": "Update an existing AwardsPhoto",
                "operationId": "updateAwardsPhoto",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/AwardsPhoto--id"
                    }
                ],
                "requestBody": {
                    "description": "AwardsPhoto to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/AwardsPhoto"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/AwardsPhoto"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "AwardsPhoto not found"
                    }
                }
            }
        },
        "/api/category": {
            "get": {
                "tags": [
                    "Categorys"
                ],
                "summary": "Get list of Category",
                "description": "Returns list of Category",
                "operationId": "indexCategory",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Category"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Categorys"
                ],
                "summary": "Insert a new Category",
                "description": "Insert a new Category",
                "operationId": "storeCategory",
                "requestBody": {
                    "description": "Category to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/Category"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Category created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Category"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation exception"
                    }
                }
            }
        },
        "/api/category/{category_id}": {
            "get": {
                "tags": [
                    "Categorys"
                ],
                "summary": "Show a Category from his Id",
                "description": "Show a Category from his Id",
                "operationId": "showCategory",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Category--id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Category"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Categorys"
                ],
                "summary": "Delete a Category",
                "description": "Delete a Category",
                "operationId": "destroyCategory",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Category--id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Category"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "description": "Category not found"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Categorys"
                ],
                "summary": "Update an existing Category",
                "description": "Update an existing Category",
                "operationId": "updateCategory",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Category--id"
                    }
                ],
                "requestBody": {
                    "description": "Category to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/Category"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Category"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found"
                    }
                }
            }
        },
        "/api/country": {
            "get": {
                "tags": [
                    "Countrys"
                ],
                "summary": "Get list of Country",
                "description": "Returns list of Country",
                "operationId": "indexCountry",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Country"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Countrys"
                ],
                "summary": "Insert a new Country",
                "description": "Insert a new Country",
                "operationId": "storeCountry",
                "requestBody": {
                    "description": "Country to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/Country"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Country created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Country"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation exception"
                    }
                }
            }
        },
        "/api/country/{country_id}": {
            "get": {
                "tags": [
                    "Countrys"
                ],
                "summary": "Show a Country from his Id",
                "description": "Show a Country from his Id",
                "operationId": "showCountry",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Country--id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Country"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Country not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Countrys"
                ],
                "summary": "Delete a Country",
                "description": "Delete a Country",
                "operationId": "destroyCountry",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Country--id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Country"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "description": "Country not found"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Countrys"
                ],
                "summary": "Update an existing Country",
                "description": "Update an existing Country",
                "operationId": "updateCountry",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Country--id"
                    }
                ],
                "requestBody": {
                    "description": "Country to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/Country"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Country"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Country not found"
                    }
                }
            }
        },
        "/api/crudgenerators": {
            "get": {
                "tags": [
                    "CrudGenerators"
                ],
                "summary": "Get list of CrudGenerator",
                "description": "Returns list of CrudGenerator",
                "operationId": "indexCrudGenerator",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CrudGenerator"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "CrudGenerators"
                ],
                "summary": "Insert a new CrudGenerator",
                "description": "Insert a new CrudGenerator",
                "operationId": "storeCrudGenerator",
                "requestBody": {
                    "description": "CrudGenerator to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/CrudGenerator"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "CrudGenerator created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/CrudGenerator"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation exception"
                    }
                }
            }
        },
        "/api/crudgenerators/{crudgenerator_id}": {
            "get": {
                "tags": [
                    "CrudGenerators"
                ],
                "summary": "Show a CrudGenerator from his Id",
                "description": "Show a CrudGenerator from his Id",
                "operationId": "showCrudGenerator",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/CrudGenerator--id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/CrudGenerator"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "CrudGenerator not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "CrudGenerators"
                ],
                "summary": "Delete a CrudGenerator",
                "description": "Delete a CrudGenerator",
                "operationId": "destroyCrudGenerator",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/CrudGenerator--id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/CrudGenerator"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "description": "CrudGenerator not found"
                    }
                }
            },
            "patch": {
                "tags": [
                    "CrudGenerators"
                ],
                "summary": "Update an existing CrudGenerator",
                "description": "Update an existing CrudGenerator",
                "operationId": "updateCrudGenerator",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/CrudGenerator--id"
                    }
                ],
                "requestBody": {
                    "description": "CrudGenerator to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/CrudGenerator"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/CrudGenerator"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "CrudGenerator not found"
                    }
                }
            }
        },
        "/api/emailverificationcode": {
            "post": {
                "tags": [
                    "login"
                ],
                "summary": "Insert a new EmailVerificationCode",
                "description": "Insert a new EmailVerificationCode",
                "operationId": "storeEmailVerificationCode",
                "requestBody": {
                    "description": "EmailVerificationCode to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/EmailVerificationCode"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "EmailVerificationCode created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/EmailVerificationCode"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation exception"
                    }
                }
            }
        },
        "/api/emailverificationcode/{emailverificationcode_id}": {
            "get": {
                "tags": [
                    "login"
                ],
                "summary": "Show a EmailVerificationCode from his Id",
                "description": "Show a EmailVerificationCode from his Id",
                "operationId": "showEmailVerificationCode",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/EmailVerificationCode--id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/EmailVerificationCode"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "EmailVerificationCode not found"
                    }
                }
            }
        },
        "/api/genre": {
            "get": {
                "tags": [
                    "Genres"
                ],
                "summary": "Get list of Genre",
                "description": "Returns list of Genre",
                "operationId": "indexGenre",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Genre"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Genres"
                ],
                "summary": "Insert a new Genre",
                "description": "Insert a new Genre",
                "operationId": "storeGenre",
                "requestBody": {
                    "description": "Genre to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/Genre"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Genre created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Genre"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation exception"
                    }
                }
            }
        },
        "/api/genre/{genre_id}": {
            "get": {
                "tags": [
                    "Genres"
                ],
                "summary": "Show a Genre from his Id",
                "description": "Show a Genre from his Id",
                "operationId": "showGenre",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Genre--id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Genre"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Genre not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Genres"
                ],
                "summary": "Delete a Genre",
                "description": "Delete a Genre",
                "operationId": "destroyGenre",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Genre--id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Genre"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "description": "Genre not found"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Genres"
                ],
                "summary": "Update an existing Genre",
                "description": "Update an existing Genre",
                "operationId": "updateGenre",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Genre--id"
                    }
                ],
                "requestBody": {
                    "description": "Genre to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/Genre"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Genre"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Genre not found"
                    }
                }
            }
        },
        "/api/latest-new-comentary": {
            "get": {
                "tags": [
                    "LatestNewsComentarys"
                ],
                "summary": "Get list of LatestNewsComentary",
                "description": "Returns list of LatestNewsComentary",
                "operationId": "indexLatestNewsComentary",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LatestNewsComentary"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "LatestNewsComentarys"
                ],
                "summary": "Insert a new LatestNewsComentary",
                "description": "Insert a new LatestNewsComentary",
                "operationId": "storeLatestNewsComentary",
                "requestBody": {
                    "description": "LatestNewsComentary to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/LatestNewsComentary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "LatestNewsComentary created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/LatestNewsComentary"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation exception"
                    }
                }
            }
        },
        "/api/movie-new-comentary/{LatestNewsComentary_id}": {
            "get": {
                "tags": [
                    "LatestNewsComentarys"
                ],
                "summary": "Show a LatestNewsComentary from his Id",
                "description": "Show a LatestNewsComentary from his Id",
                "operationId": "showLatestNewsComentary",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/LatestNewsComentary--id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/LatestNewsComentary"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "LatestNewsComentary not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "LatestNewsComentarys"
                ],
                "summary": "Delete a LatestNewsComentary",
                "description": "Delete a LatestNewsComentary",
                "operationId": "destroyLatestNewsComentary",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/LatestNewsComentary--id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/LatestNewsComentary"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "description": "LatestNewsComentary not found"
                    }
                }
            },
            "patch": {
                "tags": [
                    "LatestNewsComentarys"
                ],
                "summary": "Update an existing LatestNewsComentary",
                "description": "Update an existing LatestNewsComentary",
                "operationId": "updateLatestNewsComentary",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/LatestNewsComentary--id"
                    }
                ],
                "requestBody": {
                    "description": "LatestNewsComentary to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/LatestNewsComentary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/LatestNewsComentary"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "LatestNewsComentary not found"
                    }
                }
            }
        },
        "/api/movie": {
            "get": {
                "tags": [
                    "Movies"
                ],
                "summary": "Get list of Movie",
                "description": "Returns list of Movie",
                "operationId": "indexMovie",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Movie"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Movies"
                ],
                "summary": "Insert a new Movie",
                "description": "Insert a new Movie",
                "operationId": "storeMovie",
                "requestBody": {
                    "description": "Movie to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/Movie"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Movie created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Movie"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation exception"
                    }
                }
            }
        },
        "/api/movie/{movie_id}": {
            "get": {
                "tags": [
                    "Movies"
                ],
                "summary": "Show a Movie from his Id",
                "description": "Show a Movie from his Id",
                "operationId": "showMovie",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Movie--id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Movie"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Movie not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Movies"
                ],
                "summary": "Delete a Movie",
                "description": "Delete a Movie",
                "operationId": "destroyMovie",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Movie--id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Movie"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "description": "Movie not found"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Movies"
                ],
                "summary": "Update an existing Movie",
                "description": "Update an existing Movie",
                "operationId": "updateMovie",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Movie--id"
                    }
                ],
                "requestBody": {
                    "description": "Movie to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/Movie"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Movie"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Movie not found"
                    }
                }
            }
        },
        "/api/post-comentary": {
            "get": {
                "tags": [
                    "PostComentarys"
                ],
                "summary": "Get list of PostComentary",
                "description": "Returns list of PostComentary",
                "operationId": "indexPostComentary",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PostComentary"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "PostComentarys"
                ],
                "summary": "Insert a new PostComentary",
                "description": "Insert a new PostComentary",
                "operationId": "storePostComentary",
                "requestBody": {
                    "description": "PostComentary to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/PostComentary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "PostComentary created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/PostComentary"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation exception"
                    }
                }
            }
        },
        "/api/post-comentary/{postcomentary_id}": {
            "get": {
                "tags": [
                    "PostComentarys"
                ],
                "summary": "Show a PostComentary from his Id",
                "description": "Show a PostComentary from his Id",
                "operationId": "showPostComentary",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/PostComentary--id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/PostComentary"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "PostComentary not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "PostComentarys"
                ],
                "summary": "Delete a PostComentary",
                "description": "Delete a PostComentary",
                "operationId": "destroyPostComentary",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/PostComentary--id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/PostComentary"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "description": "PostComentary not found"
                    }
                }
            },
            "patch": {
                "tags": [
                    "PostComentarys"
                ],
                "summary": "Update an existing PostComentary",
                "description": "Update an existing PostComentary",
                "operationId": "updatePostComentary",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/PostComentary--id"
                    }
                ],
                "requestBody": {
                    "description": "PostComentary to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/PostComentary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/PostComentary"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "PostComentary not found"
                    }
                }
            }
        },
        "/api/post": {
            "get": {
                "tags": [
                    "Posts"
                ],
                "summary": "Get list of Post",
                "description": "Returns list of Post",
                "operationId": "indexPost",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Post"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Posts"
                ],
                "summary": "Insert a new Post",
                "description": "Insert a new Post",
                "operationId": "storePost",
                "requestBody": {
                    "description": "Post to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/Post"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Post created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Post"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation exception"
                    }
                }
            }
        },
        "/api/post/{post_id}": {
            "get": {
                "tags": [
                    "Posts"
                ],
                "summary": "Show a Post from his Id",
                "description": "Show a Post from his Id",
                "operationId": "showPost",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Post--id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Post"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Post not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Posts"
                ],
                "summary": "Delete a Post",
                "description": "Delete a Post",
                "operationId": "destroyPost",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Post--id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Post"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "description": "Post not found"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Posts"
                ],
                "summary": "Update an existing Post",
                "description": "Update an existing Post",
                "operationId": "updatePost",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Post--id"
                    }
                ],
                "requestBody": {
                    "description": "Post to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/Post"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Post"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Post not found"
                    }
                }
            }
        },
        "/api/profession": {
            "get": {
                "tags": [
                    "Professions"
                ],
                "summary": "Get list of Profession",
                "description": "Returns list of Profession",
                "operationId": "indexProfession",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Profession"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Professions"
                ],
                "summary": "Insert a new Profession",
                "description": "Insert a new Profession",
                "operationId": "storeProfession",
                "requestBody": {
                    "description": "Profession to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/Profession"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Profession created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Profession"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation exception"
                    }
                }
            }
        },
        "/api/profession/{profession_id}": {
            "get": {
                "tags": [
                    "Professions"
                ],
                "summary": "Show a Profession from his Id",
                "description": "Show a Profession from his Id",
                "operationId": "showProfession",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Profession--id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Profession"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Profession not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Professions"
                ],
                "summary": "Delete a Profession",
                "description": "Delete a Profession",
                "operationId": "destroyProfession",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Profession--id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Profession"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "description": "Profession not found"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Professions"
                ],
                "summary": "Update an existing Profession",
                "description": "Update an existing Profession",
                "operationId": "updateProfession",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Profession--id"
                    }
                ],
                "requestBody": {
                    "description": "Profession to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/Profession"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Profession"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Profession not found"
                    }
                }
            }
        },
        "/api/rating": {
            "get": {
                "tags": [
                    "Ratings"
                ],
                "summary": "Get list of Rating",
                "description": "Returns list of Rating",
                "operationId": "indexRating",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Rating"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Ratings"
                ],
                "summary": "Insert a new Rating",
                "description": "Insert a new Rating",
                "operationId": "storeRating",
                "requestBody": {
                    "description": "Rating to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/Rating"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Rating created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Rating"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation exception"
                    }
                }
            }
        },
        "/api/rating/{rating_id}": {
            "get": {
                "tags": [
                    "Ratings"
                ],
                "summary": "Show a Rating from his Id",
                "description": "Show a Rating from his Id",
                "operationId": "showRating",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Rating--id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Rating"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Rating not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Ratings"
                ],
                "summary": "Delete a Rating",
                "description": "Delete a Rating",
                "operationId": "destroyRating",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Rating--id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Rating"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "description": "Rating not found"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Ratings"
                ],
                "summary": "Update an existing Rating",
                "description": "Update an existing Rating",
                "operationId": "updateRating",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Rating--id"
                    }
                ],
                "requestBody": {
                    "description": "Rating to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/Rating"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Rating"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Rating not found"
                    }
                }
            }
        },
        "/api/serie": {
            "get": {
                "tags": [
                    "Series"
                ],
                "summary": "Get list of Serie",
                "description": "Returns list of Serie",
                "operationId": "indexSerie",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Serie"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Series"
                ],
                "summary": "Insert a new Serie",
                "description": "Insert a new Serie",
                "operationId": "storeSerie",
                "requestBody": {
                    "description": "Serie to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/Serie"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Serie created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Serie"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation exception"
                    }
                }
            }
        },
        "/api/serie/{serie_id}": {
            "get": {
                "tags": [
                    "Series"
                ],
                "summary": "Show a Serie from his Id",
                "description": "Show a Serie from his Id",
                "operationId": "showSerie",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Serie--id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Serie"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Serie not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Series"
                ],
                "summary": "Delete a Serie",
                "description": "Delete a Serie",
                "operationId": "destroySerie",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Serie--id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Serie"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "description": "Serie not found"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Series"
                ],
                "summary": "Update an existing Serie",
                "description": "Update an existing Serie",
                "operationId": "updateSerie",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Serie--id"
                    }
                ],
                "requestBody": {
                    "description": "Serie to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/Serie"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Serie"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Serie not found"
                    }
                }
            }
        },
        "/api/status": {
            "get": {
                "tags": [
                    "Statuss"
                ],
                "summary": "Get list of Status",
                "description": "Returns list of Status",
                "operationId": "indexStatus",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Statuss"
                ],
                "summary": "Insert a new Status",
                "description": "Insert a new Status",
                "operationId": "storeStatus",
                "requestBody": {
                    "description": "Status to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/Status"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Status created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Status"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation exception"
                    }
                }
            }
        },
        "/api/status/{status_id}": {
            "get": {
                "tags": [
                    "Statuss"
                ],
                "summary": "Show a Status from his Id",
                "description": "Show a Status from his Id",
                "operationId": "showStatus",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Status--id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Status"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Status not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Statuss"
                ],
                "summary": "Delete a Status",
                "description": "Delete a Status",
                "operationId": "destroyStatus",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Status--id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Status"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "description": "Status not found"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Statuss"
                ],
                "summary": "Update an existing Status",
                "description": "Update an existing Status",
                "operationId": "updateStatus",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Status--id"
                    }
                ],
                "requestBody": {
                    "description": "Status to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/Status"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Status"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Status not found"
                    }
                }
            }
        },
        "/api/studio": {
            "get": {
                "tags": [
                    "Studio"
                ],
                "summary": "Get list of Studio",
                "description": "Returns list of Studio",
                "operationId": "indexStudio",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Studio"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Studio"
                ],
                "summary": "Insert a new Studio",
                "description": "Insert a new Studio",
                "operationId": "storeStudio",
                "requestBody": {
                    "description": "Studio to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/Studio"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Studio created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Studio"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation exception"
                    }
                }
            }
        },
        "/api/studio/{studio_id}": {
            "get": {
                "tags": [
                    "Studio"
                ],
                "summary": "Show a Studio from his Id",
                "description": "Show a Studio from his Id",
                "operationId": "showStudio",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Studio--id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Studio"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Studio not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Studio"
                ],
                "summary": "Delete a Studio",
                "description": "Delete a Studio",
                "operationId": "destroyStudio",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Studio--id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Studio"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "description": "Studio not found"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Studio"
                ],
                "summary": "Update an existing Studio",
                "description": "Update an existing Studio",
                "operationId": "updateStudio",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Studio--id"
                    }
                ],
                "requestBody": {
                    "description": "Studio to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/Studio"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Studio"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Studio not found"
                    }
                }
            }
        },
        "/api/upload-file": {
            "post": {
                "tags": [
                    "Files"
                ],
                "summary": "Upload a file and get path",
                "description": "Upload file",
                "operationId": "uploadFile",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "path": {
                                            "title": "path",
                                            "type": "string",
                                            "example": "example/example.jpg"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found"
                    }
                }
            }
        },
        "/api/user": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get list of User",
                "description": "Returns list of User",
                "operationId": "indexUser",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Users"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Insert a new User",
                "description": "Insert a new User",
                "operationId": "storeUser",
                "requestBody": {
                    "description": "User to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/User"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation exception"
                    }
                }
            }
        },
        "/api/user/{user_id}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Show a User from his Id",
                "description": "Show a User from his Id",
                "operationId": "showUser",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/User--id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Delete a User",
                "description": "Delete a User",
                "operationId": "destroyUser",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/User--id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Users"
                ],
                "summary": "Update an existing User",
                "description": "Update an existing User",
                "operationId": "updateUser",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/User--id"
                    }
                ],
                "requestBody": {
                    "description": "User to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/User"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/api/role": {
            "get": {
                "tags": [
                    "Role"
                ],
                "summary": "Show a role list",
                "description": "Show a role list",
                "operationId": "showRole",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Actor": {
                "title": "Actor",
                "description": "Actor model",
                "required": [],
                "properties": {
                    "id": {
                        "title": "id",
                        "description": "id of Actor",
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "name": {
                        "title": "name",
                        "description": "name of Actor",
                        "type": "string",
                        "example": "Macbook Pro"
                    },
                    "sku": {
                        "title": "sku",
                        "description": "sku of Actor",
                        "type": "string",
                        "example": "MCBPRO2022"
                    },
                    "price": {
                        "title": "price",
                        "description": "price of Actor",
                        "type": "integer",
                        "example": "99"
                    },
                    "created_at": {
                        "title": "created_at",
                        "type": "dateTime",
                        "readOnly": "true",
                        "example": "2022-07-04T02:41:42.336Z"
                    },
                    "updated_at": {
                        "title": "updated_at",
                        "type": "dateTime",
                        "readOnly": "true",
                        "example": "2022-07-04T02:41:42.336Z"
                    }
                },
                "type": "object"
            },
            "Actors": {
                "title": "Actors list",
                "properties": {
                    "data": {
                        "title": "data",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Actor"
                        }
                    },
                    "first_page_url": {
                        "title": "first_page_url",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers?page=1"
                    },
                    "last_page_url": {
                        "title": "last_page_url",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers?page=3"
                    },
                    "prev_page_url": {
                        "title": "prev_page_url",
                        "type": "string",
                        "example": "null"
                    },
                    "next_page_url": {
                        "title": "next_page_url",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers?page=2"
                    },
                    "current_page": {
                        "title": "current_page",
                        "type": "integer",
                        "example": "1"
                    },
                    "from": {
                        "title": "from",
                        "type": "integer",
                        "example": "1"
                    },
                    "last_page": {
                        "title": "last_page",
                        "type": "integer",
                        "example": "3"
                    },
                    "path": {
                        "title": "path",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers"
                    },
                    "per_page": {
                        "title": "per_page",
                        "type": "integer",
                        "example": "1"
                    },
                    "total": {
                        "title": "total",
                        "type": "integer",
                        "example": "3"
                    },
                    "links": {
                        "title": "links",
                        "type": "array",
                        "items": {
                            "properties": {
                                "url": {
                                    "title": "url",
                                    "type": "string",
                                    "example": "http://localhost:8080/api/merchant-customers?page=2"
                                },
                                "label": {
                                    "title": "label",
                                    "type": "string",
                                    "example": "1"
                                },
                                "active": {
                                    "title": "active",
                                    "type": "boolean",
                                    "example": "true"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "AwardsPhoto": {
                "title": "AwardsPhoto",
                "description": "AwardsPhoto model",
                "required": [],
                "properties": {
                    "id": {
                        "title": "id",
                        "description": "id of AwardsPhoto",
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "name": {
                        "title": "name",
                        "description": "name of AwardsPhoto",
                        "type": "string",
                        "example": "Macbook Pro"
                    },
                    "sku": {
                        "title": "sku",
                        "description": "sku of AwardsPhoto",
                        "type": "string",
                        "example": "MCBPRO2022"
                    },
                    "price": {
                        "title": "price",
                        "description": "price of AwardsPhoto",
                        "type": "integer",
                        "example": "99"
                    },
                    "created_at": {
                        "title": "created_at",
                        "type": "dateTime",
                        "readOnly": "true",
                        "example": "2022-07-04T02:41:42.336Z"
                    },
                    "updated_at": {
                        "title": "updated_at",
                        "type": "dateTime",
                        "readOnly": "true",
                        "example": "2022-07-04T02:41:42.336Z"
                    }
                },
                "type": "object"
            },
            "AwardsPhotos": {
                "title": "AwardsPhotos list",
                "properties": {
                    "data": {
                        "title": "data",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AwardsPhoto"
                        }
                    },
                    "first_page_url": {
                        "title": "first_page_url",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers?page=1"
                    },
                    "last_page_url": {
                        "title": "last_page_url",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers?page=3"
                    },
                    "prev_page_url": {
                        "title": "prev_page_url",
                        "type": "string",
                        "example": "null"
                    },
                    "next_page_url": {
                        "title": "next_page_url",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers?page=2"
                    },
                    "current_page": {
                        "title": "current_page",
                        "type": "integer",
                        "example": "1"
                    },
                    "from": {
                        "title": "from",
                        "type": "integer",
                        "example": "1"
                    },
                    "last_page": {
                        "title": "last_page",
                        "type": "integer",
                        "example": "3"
                    },
                    "path": {
                        "title": "path",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers"
                    },
                    "per_page": {
                        "title": "per_page",
                        "type": "integer",
                        "example": "1"
                    },
                    "total": {
                        "title": "total",
                        "type": "integer",
                        "example": "3"
                    },
                    "links": {
                        "title": "links",
                        "type": "array",
                        "items": {
                            "properties": {
                                "url": {
                                    "title": "url",
                                    "type": "string",
                                    "example": "http://localhost:8080/api/merchant-customers?page=2"
                                },
                                "label": {
                                    "title": "label",
                                    "type": "string",
                                    "example": "1"
                                },
                                "active": {
                                    "title": "active",
                                    "type": "boolean",
                                    "example": "true"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "Category": {
                "title": "Category",
                "description": "Category model",
                "required": [],
                "properties": {
                    "id": {
                        "title": "id",
                        "description": "id of Category",
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "name": {
                        "title": "name",
                        "description": "name of Category",
                        "type": "string",
                        "example": "Macbook Pro"
                    },
                    "sku": {
                        "title": "sku",
                        "description": "sku of Category",
                        "type": "string",
                        "example": "MCBPRO2022"
                    },
                    "price": {
                        "title": "price",
                        "description": "price of Category",
                        "type": "integer",
                        "example": "99"
                    },
                    "created_at": {
                        "title": "created_at",
                        "type": "dateTime",
                        "readOnly": "true",
                        "example": "2022-07-04T02:41:42.336Z"
                    },
                    "updated_at": {
                        "title": "updated_at",
                        "type": "dateTime",
                        "readOnly": "true",
                        "example": "2022-07-04T02:41:42.336Z"
                    }
                },
                "type": "object"
            },
            "Categorys": {
                "title": "Categorys list",
                "properties": {
                    "data": {
                        "title": "data",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Category"
                        }
                    },
                    "first_page_url": {
                        "title": "first_page_url",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers?page=1"
                    },
                    "last_page_url": {
                        "title": "last_page_url",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers?page=3"
                    },
                    "prev_page_url": {
                        "title": "prev_page_url",
                        "type": "string",
                        "example": "null"
                    },
                    "next_page_url": {
                        "title": "next_page_url",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers?page=2"
                    },
                    "current_page": {
                        "title": "current_page",
                        "type": "integer",
                        "example": "1"
                    },
                    "from": {
                        "title": "from",
                        "type": "integer",
                        "example": "1"
                    },
                    "last_page": {
                        "title": "last_page",
                        "type": "integer",
                        "example": "3"
                    },
                    "path": {
                        "title": "path",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers"
                    },
                    "per_page": {
                        "title": "per_page",
                        "type": "integer",
                        "example": "1"
                    },
                    "total": {
                        "title": "total",
                        "type": "integer",
                        "example": "3"
                    },
                    "links": {
                        "title": "links",
                        "type": "array",
                        "items": {
                            "properties": {
                                "url": {
                                    "title": "url",
                                    "type": "string",
                                    "example": "http://localhost:8080/api/merchant-customers?page=2"
                                },
                                "label": {
                                    "title": "label",
                                    "type": "string",
                                    "example": "1"
                                },
                                "active": {
                                    "title": "active",
                                    "type": "boolean",
                                    "example": "true"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "Country": {
                "title": "Country",
                "description": "Country model",
                "required": [],
                "properties": {
                    "id": {
                        "title": "id",
                        "description": "id of Country",
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "name": {
                        "title": "name",
                        "description": "name of Country",
                        "type": "string",
                        "example": "Macbook Pro"
                    },
                    "sku": {
                        "title": "sku",
                        "description": "sku of Country",
                        "type": "string",
                        "example": "MCBPRO2022"
                    },
                    "price": {
                        "title": "price",
                        "description": "price of Country",
                        "type": "integer",
                        "example": "99"
                    },
                    "created_at": {
                        "title": "created_at",
                        "type": "dateTime",
                        "readOnly": "true",
                        "example": "2022-07-04T02:41:42.336Z"
                    },
                    "updated_at": {
                        "title": "updated_at",
                        "type": "dateTime",
                        "readOnly": "true",
                        "example": "2022-07-04T02:41:42.336Z"
                    }
                },
                "type": "object"
            },
            "Countrys": {
                "title": "Countrys list",
                "properties": {
                    "data": {
                        "title": "data",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Country"
                        }
                    },
                    "first_page_url": {
                        "title": "first_page_url",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers?page=1"
                    },
                    "last_page_url": {
                        "title": "last_page_url",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers?page=3"
                    },
                    "prev_page_url": {
                        "title": "prev_page_url",
                        "type": "string",
                        "example": "null"
                    },
                    "next_page_url": {
                        "title": "next_page_url",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers?page=2"
                    },
                    "current_page": {
                        "title": "current_page",
                        "type": "integer",
                        "example": "1"
                    },
                    "from": {
                        "title": "from",
                        "type": "integer",
                        "example": "1"
                    },
                    "last_page": {
                        "title": "last_page",
                        "type": "integer",
                        "example": "3"
                    },
                    "path": {
                        "title": "path",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers"
                    },
                    "per_page": {
                        "title": "per_page",
                        "type": "integer",
                        "example": "1"
                    },
                    "total": {
                        "title": "total",
                        "type": "integer",
                        "example": "3"
                    },
                    "links": {
                        "title": "links",
                        "type": "array",
                        "items": {
                            "properties": {
                                "url": {
                                    "title": "url",
                                    "type": "string",
                                    "example": "http://localhost:8080/api/merchant-customers?page=2"
                                },
                                "label": {
                                    "title": "label",
                                    "type": "string",
                                    "example": "1"
                                },
                                "active": {
                                    "title": "active",
                                    "type": "boolean",
                                    "example": "true"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "CrudGenerator": {
                "title": "CrudGenerator",
                "description": "CrudGenerator model",
                "required": [],
                "properties": {
                    "id": {
                        "title": "id",
                        "description": "id of CrudGenerator",
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "name": {
                        "title": "name",
                        "description": "name of CrudGenerator",
                        "type": "string",
                        "example": "Macbook Pro"
                    },
                    "sku": {
                        "title": "sku",
                        "description": "sku of CrudGenerator",
                        "type": "string",
                        "example": "MCBPRO2022"
                    },
                    "price": {
                        "title": "price",
                        "description": "price of CrudGenerator",
                        "type": "integer",
                        "example": "99"
                    },
                    "created_at": {
                        "title": "created_at",
                        "type": "dateTime",
                        "readOnly": "true",
                        "example": "2022-07-04T02:41:42.336Z"
                    },
                    "updated_at": {
                        "title": "updated_at",
                        "type": "dateTime",
                        "readOnly": "true",
                        "example": "2022-07-04T02:41:42.336Z"
                    }
                },
                "type": "object"
            },
            "CrudGenerators": {
                "title": "CrudGenerators list",
                "properties": {
                    "data": {
                        "title": "data",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CrudGenerator"
                        }
                    },
                    "first_page_url": {
                        "title": "first_page_url",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers?page=1"
                    },
                    "last_page_url": {
                        "title": "last_page_url",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers?page=3"
                    },
                    "prev_page_url": {
                        "title": "prev_page_url",
                        "type": "string",
                        "example": "null"
                    },
                    "next_page_url": {
                        "title": "next_page_url",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers?page=2"
                    },
                    "current_page": {
                        "title": "current_page",
                        "type": "integer",
                        "example": "1"
                    },
                    "from": {
                        "title": "from",
                        "type": "integer",
                        "example": "1"
                    },
                    "last_page": {
                        "title": "last_page",
                        "type": "integer",
                        "example": "3"
                    },
                    "path": {
                        "title": "path",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers"
                    },
                    "per_page": {
                        "title": "per_page",
                        "type": "integer",
                        "example": "1"
                    },
                    "total": {
                        "title": "total",
                        "type": "integer",
                        "example": "3"
                    },
                    "links": {
                        "title": "links",
                        "type": "array",
                        "items": {
                            "properties": {
                                "url": {
                                    "title": "url",
                                    "type": "string",
                                    "example": "http://localhost:8080/api/merchant-customers?page=2"
                                },
                                "label": {
                                    "title": "label",
                                    "type": "string",
                                    "example": "1"
                                },
                                "active": {
                                    "title": "active",
                                    "type": "boolean",
                                    "example": "true"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "EmailVerificationCode": {
                "title": "EmailVerificationCode",
                "description": "EmailVerificationCode model",
                "required": [],
                "properties": {
                    "id": {
                        "title": "id",
                        "description": "id of EmailVerificationCode",
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "name": {
                        "title": "name",
                        "description": "name of EmailVerificationCode",
                        "type": "string",
                        "example": "Macbook Pro"
                    },
                    "sku": {
                        "title": "sku",
                        "description": "sku of EmailVerificationCode",
                        "type": "string",
                        "example": "MCBPRO2022"
                    },
                    "price": {
                        "title": "price",
                        "description": "price of EmailVerificationCode",
                        "type": "integer",
                        "example": "99"
                    },
                    "created_at": {
                        "title": "created_at",
                        "type": "dateTime",
                        "readOnly": "true",
                        "example": "2022-07-04T02:41:42.336Z"
                    },
                    "updated_at": {
                        "title": "updated_at",
                        "type": "dateTime",
                        "readOnly": "true",
                        "example": "2022-07-04T02:41:42.336Z"
                    }
                },
                "type": "object"
            },
            "EmailVerificationCodes": {
                "title": "EmailVerificationCodes list",
                "properties": {
                    "data": {
                        "title": "data",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/EmailVerificationCode"
                        }
                    },
                    "first_page_url": {
                        "title": "first_page_url",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers?page=1"
                    },
                    "last_page_url": {
                        "title": "last_page_url",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers?page=3"
                    },
                    "prev_page_url": {
                        "title": "prev_page_url",
                        "type": "string",
                        "example": "null"
                    },
                    "next_page_url": {
                        "title": "next_page_url",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers?page=2"
                    },
                    "current_page": {
                        "title": "current_page",
                        "type": "integer",
                        "example": "1"
                    },
                    "from": {
                        "title": "from",
                        "type": "integer",
                        "example": "1"
                    },
                    "last_page": {
                        "title": "last_page",
                        "type": "integer",
                        "example": "3"
                    },
                    "path": {
                        "title": "path",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers"
                    },
                    "per_page": {
                        "title": "per_page",
                        "type": "integer",
                        "example": "1"
                    },
                    "total": {
                        "title": "total",
                        "type": "integer",
                        "example": "3"
                    },
                    "links": {
                        "title": "links",
                        "type": "array",
                        "items": {
                            "properties": {
                                "url": {
                                    "title": "url",
                                    "type": "string",
                                    "example": "http://localhost:8080/api/merchant-customers?page=2"
                                },
                                "label": {
                                    "title": "label",
                                    "type": "string",
                                    "example": "1"
                                },
                                "active": {
                                    "title": "active",
                                    "type": "boolean",
                                    "example": "true"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "Genre": {
                "title": "Genre",
                "description": "Genre model",
                "required": [],
                "properties": {
                    "id": {
                        "title": "id",
                        "description": "id of Genre",
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "name": {
                        "title": "name",
                        "description": "name of Genre",
                        "type": "string",
                        "example": "Macbook Pro"
                    },
                    "sku": {
                        "title": "sku",
                        "description": "sku of Genre",
                        "type": "string",
                        "example": "MCBPRO2022"
                    },
                    "price": {
                        "title": "price",
                        "description": "price of Genre",
                        "type": "integer",
                        "example": "99"
                    },
                    "created_at": {
                        "title": "created_at",
                        "type": "dateTime",
                        "readOnly": "true",
                        "example": "2022-07-04T02:41:42.336Z"
                    },
                    "updated_at": {
                        "title": "updated_at",
                        "type": "dateTime",
                        "readOnly": "true",
                        "example": "2022-07-04T02:41:42.336Z"
                    }
                },
                "type": "object"
            },
            "Genres": {
                "title": "Genres list",
                "properties": {
                    "data": {
                        "title": "data",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Genre"
                        }
                    },
                    "first_page_url": {
                        "title": "first_page_url",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers?page=1"
                    },
                    "last_page_url": {
                        "title": "last_page_url",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers?page=3"
                    },
                    "prev_page_url": {
                        "title": "prev_page_url",
                        "type": "string",
                        "example": "null"
                    },
                    "next_page_url": {
                        "title": "next_page_url",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers?page=2"
                    },
                    "current_page": {
                        "title": "current_page",
                        "type": "integer",
                        "example": "1"
                    },
                    "from": {
                        "title": "from",
                        "type": "integer",
                        "example": "1"
                    },
                    "last_page": {
                        "title": "last_page",
                        "type": "integer",
                        "example": "3"
                    },
                    "path": {
                        "title": "path",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers"
                    },
                    "per_page": {
                        "title": "per_page",
                        "type": "integer",
                        "example": "1"
                    },
                    "total": {
                        "title": "total",
                        "type": "integer",
                        "example": "3"
                    },
                    "links": {
                        "title": "links",
                        "type": "array",
                        "items": {
                            "properties": {
                                "url": {
                                    "title": "url",
                                    "type": "string",
                                    "example": "http://localhost:8080/api/merchant-customers?page=2"
                                },
                                "label": {
                                    "title": "label",
                                    "type": "string",
                                    "example": "1"
                                },
                                "active": {
                                    "title": "active",
                                    "type": "boolean",
                                    "example": "true"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "LatestNew": {
                "title": "LatestNew",
                "description": "LatestNew model",
                "required": [],
                "properties": {
                    "id": {
                        "title": "id",
                        "description": "id of LatestNew",
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "name": {
                        "title": "name",
                        "description": "name of LatestNew",
                        "type": "string",
                        "example": "Macbook Pro"
                    },
                    "sku": {
                        "title": "sku",
                        "description": "sku of LatestNew",
                        "type": "string",
                        "example": "MCBPRO2022"
                    },
                    "price": {
                        "title": "price",
                        "description": "price of LatestNew",
                        "type": "integer",
                        "example": "99"
                    },
                    "created_at": {
                        "title": "created_at",
                        "type": "dateTime",
                        "readOnly": "true",
                        "example": "2022-07-04T02:41:42.336Z"
                    },
                    "updated_at": {
                        "title": "updated_at",
                        "type": "dateTime",
                        "readOnly": "true",
                        "example": "2022-07-04T02:41:42.336Z"
                    }
                },
                "type": "object"
            },
            "LatestNews": {
                "title": "LatestNews list",
                "properties": {
                    "data": {
                        "title": "data",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LatestNew"
                        }
                    },
                    "first_page_url": {
                        "title": "first_page_url",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers?page=1"
                    },
                    "last_page_url": {
                        "title": "last_page_url",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers?page=3"
                    },
                    "prev_page_url": {
                        "title": "prev_page_url",
                        "type": "string",
                        "example": "null"
                    },
                    "next_page_url": {
                        "title": "next_page_url",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers?page=2"
                    },
                    "current_page": {
                        "title": "current_page",
                        "type": "integer",
                        "example": "1"
                    },
                    "from": {
                        "title": "from",
                        "type": "integer",
                        "example": "1"
                    },
                    "last_page": {
                        "title": "last_page",
                        "type": "integer",
                        "example": "3"
                    },
                    "path": {
                        "title": "path",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers"
                    },
                    "per_page": {
                        "title": "per_page",
                        "type": "integer",
                        "example": "1"
                    },
                    "total": {
                        "title": "total",
                        "type": "integer",
                        "example": "3"
                    },
                    "links": {
                        "title": "links",
                        "type": "array",
                        "items": {
                            "properties": {
                                "url": {
                                    "title": "url",
                                    "type": "string",
                                    "example": "http://localhost:8080/api/merchant-customers?page=2"
                                },
                                "label": {
                                    "title": "label",
                                    "type": "string",
                                    "example": "1"
                                },
                                "active": {
                                    "title": "active",
                                    "type": "boolean",
                                    "example": "true"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "LatestNewsComentary": {
                "title": "LatestNewsComentary",
                "description": "LatestNewsComentary model",
                "required": [],
                "properties": {
                    "id": {
                        "title": "id",
                        "description": "id of LatestNewsComentary",
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "name": {
                        "title": "name",
                        "description": "name of LatestNewsComentary",
                        "type": "string",
                        "example": "Macbook Pro"
                    },
                    "sku": {
                        "title": "sku",
                        "description": "sku of LatestNewsComentary",
                        "type": "string",
                        "example": "MCBPRO2022"
                    },
                    "price": {
                        "title": "price",
                        "description": "price of LatestNewsComentary",
                        "type": "integer",
                        "example": "99"
                    },
                    "created_at": {
                        "title": "created_at",
                        "type": "dateTime",
                        "readOnly": "true",
                        "example": "2022-07-04T02:41:42.336Z"
                    },
                    "updated_at": {
                        "title": "updated_at",
                        "type": "dateTime",
                        "readOnly": "true",
                        "example": "2022-07-04T02:41:42.336Z"
                    }
                },
                "type": "object"
            },
            "LatestNewsComentarys": {
                "title": "LatestNewsComentarys list",
                "properties": {
                    "data": {
                        "title": "data",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LatestNewsComentary"
                        }
                    },
                    "first_page_url": {
                        "title": "first_page_url",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers?page=1"
                    },
                    "last_page_url": {
                        "title": "last_page_url",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers?page=3"
                    },
                    "prev_page_url": {
                        "title": "prev_page_url",
                        "type": "string",
                        "example": "null"
                    },
                    "next_page_url": {
                        "title": "next_page_url",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers?page=2"
                    },
                    "current_page": {
                        "title": "current_page",
                        "type": "integer",
                        "example": "1"
                    },
                    "from": {
                        "title": "from",
                        "type": "integer",
                        "example": "1"
                    },
                    "last_page": {
                        "title": "last_page",
                        "type": "integer",
                        "example": "3"
                    },
                    "path": {
                        "title": "path",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers"
                    },
                    "per_page": {
                        "title": "per_page",
                        "type": "integer",
                        "example": "1"
                    },
                    "total": {
                        "title": "total",
                        "type": "integer",
                        "example": "3"
                    },
                    "links": {
                        "title": "links",
                        "type": "array",
                        "items": {
                            "properties": {
                                "url": {
                                    "title": "url",
                                    "type": "string",
                                    "example": "http://localhost:8080/api/merchant-customers?page=2"
                                },
                                "label": {
                                    "title": "label",
                                    "type": "string",
                                    "example": "1"
                                },
                                "active": {
                                    "title": "active",
                                    "type": "boolean",
                                    "example": "true"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "Movie": {
                "title": "Movie",
                "description": "Movie model",
                "required": [],
                "properties": {
                    "id": {
                        "title": "id",
                        "description": "id of Movie",
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "name": {
                        "title": "name",
                        "description": "name of Movie",
                        "type": "string",
                        "example": "Macbook Pro"
                    },
                    "sku": {
                        "title": "sku",
                        "description": "sku of Movie",
                        "type": "string",
                        "example": "MCBPRO2022"
                    },
                    "price": {
                        "title": "price",
                        "description": "price of Movie",
                        "type": "integer",
                        "example": "99"
                    },
                    "created_at": {
                        "title": "created_at",
                        "type": "dateTime",
                        "readOnly": "true",
                        "example": "2022-07-04T02:41:42.336Z"
                    },
                    "updated_at": {
                        "title": "updated_at",
                        "type": "dateTime",
                        "readOnly": "true",
                        "example": "2022-07-04T02:41:42.336Z"
                    }
                },
                "type": "object"
            },
            "Movies": {
                "title": "Movies list",
                "properties": {
                    "data": {
                        "title": "data",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Movie"
                        }
                    },
                    "first_page_url": {
                        "title": "first_page_url",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers?page=1"
                    },
                    "last_page_url": {
                        "title": "last_page_url",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers?page=3"
                    },
                    "prev_page_url": {
                        "title": "prev_page_url",
                        "type": "string",
                        "example": "null"
                    },
                    "next_page_url": {
                        "title": "next_page_url",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers?page=2"
                    },
                    "current_page": {
                        "title": "current_page",
                        "type": "integer",
                        "example": "1"
                    },
                    "from": {
                        "title": "from",
                        "type": "integer",
                        "example": "1"
                    },
                    "last_page": {
                        "title": "last_page",
                        "type": "integer",
                        "example": "3"
                    },
                    "path": {
                        "title": "path",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers"
                    },
                    "per_page": {
                        "title": "per_page",
                        "type": "integer",
                        "example": "1"
                    },
                    "total": {
                        "title": "total",
                        "type": "integer",
                        "example": "3"
                    },
                    "links": {
                        "title": "links",
                        "type": "array",
                        "items": {
                            "properties": {
                                "url": {
                                    "title": "url",
                                    "type": "string",
                                    "example": "http://localhost:8080/api/merchant-customers?page=2"
                                },
                                "label": {
                                    "title": "label",
                                    "type": "string",
                                    "example": "1"
                                },
                                "active": {
                                    "title": "active",
                                    "type": "boolean",
                                    "example": "true"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "Post": {
                "title": "Post",
                "description": "Post model",
                "required": [],
                "properties": {
                    "id": {
                        "title": "id",
                        "description": "id of Post",
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "name": {
                        "title": "name",
                        "description": "name of Post",
                        "type": "string",
                        "example": "Macbook Pro"
                    },
                    "sku": {
                        "title": "sku",
                        "description": "sku of Post",
                        "type": "string",
                        "example": "MCBPRO2022"
                    },
                    "price": {
                        "title": "price",
                        "description": "price of Post",
                        "type": "integer",
                        "example": "99"
                    },
                    "created_at": {
                        "title": "created_at",
                        "type": "dateTime",
                        "readOnly": "true",
                        "example": "2022-07-04T02:41:42.336Z"
                    },
                    "updated_at": {
                        "title": "updated_at",
                        "type": "dateTime",
                        "readOnly": "true",
                        "example": "2022-07-04T02:41:42.336Z"
                    }
                },
                "type": "object"
            },
            "Posts": {
                "title": "Posts list",
                "properties": {
                    "data": {
                        "title": "data",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Post"
                        }
                    },
                    "first_page_url": {
                        "title": "first_page_url",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers?page=1"
                    },
                    "last_page_url": {
                        "title": "last_page_url",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers?page=3"
                    },
                    "prev_page_url": {
                        "title": "prev_page_url",
                        "type": "string",
                        "example": "null"
                    },
                    "next_page_url": {
                        "title": "next_page_url",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers?page=2"
                    },
                    "current_page": {
                        "title": "current_page",
                        "type": "integer",
                        "example": "1"
                    },
                    "from": {
                        "title": "from",
                        "type": "integer",
                        "example": "1"
                    },
                    "last_page": {
                        "title": "last_page",
                        "type": "integer",
                        "example": "3"
                    },
                    "path": {
                        "title": "path",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers"
                    },
                    "per_page": {
                        "title": "per_page",
                        "type": "integer",
                        "example": "1"
                    },
                    "total": {
                        "title": "total",
                        "type": "integer",
                        "example": "3"
                    },
                    "links": {
                        "title": "links",
                        "type": "array",
                        "items": {
                            "properties": {
                                "url": {
                                    "title": "url",
                                    "type": "string",
                                    "example": "http://localhost:8080/api/merchant-customers?page=2"
                                },
                                "label": {
                                    "title": "label",
                                    "type": "string",
                                    "example": "1"
                                },
                                "active": {
                                    "title": "active",
                                    "type": "boolean",
                                    "example": "true"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "PostComentary": {
                "title": "PostComentary",
                "description": "PostComentary model",
                "required": [],
                "properties": {
                    "id": {
                        "title": "id",
                        "description": "id of PostComentary",
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "name": {
                        "title": "name",
                        "description": "name of PostComentary",
                        "type": "string",
                        "example": "Macbook Pro"
                    },
                    "sku": {
                        "title": "sku",
                        "description": "sku of PostComentary",
                        "type": "string",
                        "example": "MCBPRO2022"
                    },
                    "price": {
                        "title": "price",
                        "description": "price of PostComentary",
                        "type": "integer",
                        "example": "99"
                    },
                    "created_at": {
                        "title": "created_at",
                        "type": "dateTime",
                        "readOnly": "true",
                        "example": "2022-07-04T02:41:42.336Z"
                    },
                    "updated_at": {
                        "title": "updated_at",
                        "type": "dateTime",
                        "readOnly": "true",
                        "example": "2022-07-04T02:41:42.336Z"
                    }
                },
                "type": "object"
            },
            "PostComentarys": {
                "title": "PostComentarys list",
                "properties": {
                    "data": {
                        "title": "data",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PostComentary"
                        }
                    },
                    "first_page_url": {
                        "title": "first_page_url",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers?page=1"
                    },
                    "last_page_url": {
                        "title": "last_page_url",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers?page=3"
                    },
                    "prev_page_url": {
                        "title": "prev_page_url",
                        "type": "string",
                        "example": "null"
                    },
                    "next_page_url": {
                        "title": "next_page_url",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers?page=2"
                    },
                    "current_page": {
                        "title": "current_page",
                        "type": "integer",
                        "example": "1"
                    },
                    "from": {
                        "title": "from",
                        "type": "integer",
                        "example": "1"
                    },
                    "last_page": {
                        "title": "last_page",
                        "type": "integer",
                        "example": "3"
                    },
                    "path": {
                        "title": "path",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers"
                    },
                    "per_page": {
                        "title": "per_page",
                        "type": "integer",
                        "example": "1"
                    },
                    "total": {
                        "title": "total",
                        "type": "integer",
                        "example": "3"
                    },
                    "links": {
                        "title": "links",
                        "type": "array",
                        "items": {
                            "properties": {
                                "url": {
                                    "title": "url",
                                    "type": "string",
                                    "example": "http://localhost:8080/api/merchant-customers?page=2"
                                },
                                "label": {
                                    "title": "label",
                                    "type": "string",
                                    "example": "1"
                                },
                                "active": {
                                    "title": "active",
                                    "type": "boolean",
                                    "example": "true"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "Profession": {
                "title": "Profession",
                "description": "Profession model",
                "required": [],
                "properties": {
                    "id": {
                        "title": "id",
                        "description": "id of Profession",
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "name": {
                        "title": "name",
                        "description": "name of Profession",
                        "type": "string",
                        "example": "Macbook Pro"
                    },
                    "sku": {
                        "title": "sku",
                        "description": "sku of Profession",
                        "type": "string",
                        "example": "MCBPRO2022"
                    },
                    "price": {
                        "title": "price",
                        "description": "price of Profession",
                        "type": "integer",
                        "example": "99"
                    },
                    "created_at": {
                        "title": "created_at",
                        "type": "dateTime",
                        "readOnly": "true",
                        "example": "2022-07-04T02:41:42.336Z"
                    },
                    "updated_at": {
                        "title": "updated_at",
                        "type": "dateTime",
                        "readOnly": "true",
                        "example": "2022-07-04T02:41:42.336Z"
                    }
                },
                "type": "object"
            },
            "Professions": {
                "title": "Professions list",
                "properties": {
                    "data": {
                        "title": "data",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Profession"
                        }
                    },
                    "first_page_url": {
                        "title": "first_page_url",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers?page=1"
                    },
                    "last_page_url": {
                        "title": "last_page_url",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers?page=3"
                    },
                    "prev_page_url": {
                        "title": "prev_page_url",
                        "type": "string",
                        "example": "null"
                    },
                    "next_page_url": {
                        "title": "next_page_url",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers?page=2"
                    },
                    "current_page": {
                        "title": "current_page",
                        "type": "integer",
                        "example": "1"
                    },
                    "from": {
                        "title": "from",
                        "type": "integer",
                        "example": "1"
                    },
                    "last_page": {
                        "title": "last_page",
                        "type": "integer",
                        "example": "3"
                    },
                    "path": {
                        "title": "path",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers"
                    },
                    "per_page": {
                        "title": "per_page",
                        "type": "integer",
                        "example": "1"
                    },
                    "total": {
                        "title": "total",
                        "type": "integer",
                        "example": "3"
                    },
                    "links": {
                        "title": "links",
                        "type": "array",
                        "items": {
                            "properties": {
                                "url": {
                                    "title": "url",
                                    "type": "string",
                                    "example": "http://localhost:8080/api/merchant-customers?page=2"
                                },
                                "label": {
                                    "title": "label",
                                    "type": "string",
                                    "example": "1"
                                },
                                "active": {
                                    "title": "active",
                                    "type": "boolean",
                                    "example": "true"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "Rating": {
                "title": "Rating",
                "description": "Rating model",
                "required": [],
                "properties": {
                    "id": {
                        "title": "id",
                        "description": "id of Rating",
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "name": {
                        "title": "name",
                        "description": "name of Rating",
                        "type": "string",
                        "example": "Macbook Pro"
                    },
                    "sku": {
                        "title": "sku",
                        "description": "sku of Rating",
                        "type": "string",
                        "example": "MCBPRO2022"
                    },
                    "price": {
                        "title": "price",
                        "description": "price of Rating",
                        "type": "integer",
                        "example": "99"
                    },
                    "created_at": {
                        "title": "created_at",
                        "type": "dateTime",
                        "readOnly": "true",
                        "example": "2022-07-04T02:41:42.336Z"
                    },
                    "updated_at": {
                        "title": "updated_at",
                        "type": "dateTime",
                        "readOnly": "true",
                        "example": "2022-07-04T02:41:42.336Z"
                    }
                },
                "type": "object"
            },
            "Ratings": {
                "title": "Ratings list",
                "properties": {
                    "data": {
                        "title": "data",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Rating"
                        }
                    },
                    "first_page_url": {
                        "title": "first_page_url",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers?page=1"
                    },
                    "last_page_url": {
                        "title": "last_page_url",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers?page=3"
                    },
                    "prev_page_url": {
                        "title": "prev_page_url",
                        "type": "string",
                        "example": "null"
                    },
                    "next_page_url": {
                        "title": "next_page_url",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers?page=2"
                    },
                    "current_page": {
                        "title": "current_page",
                        "type": "integer",
                        "example": "1"
                    },
                    "from": {
                        "title": "from",
                        "type": "integer",
                        "example": "1"
                    },
                    "last_page": {
                        "title": "last_page",
                        "type": "integer",
                        "example": "3"
                    },
                    "path": {
                        "title": "path",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers"
                    },
                    "per_page": {
                        "title": "per_page",
                        "type": "integer",
                        "example": "1"
                    },
                    "total": {
                        "title": "total",
                        "type": "integer",
                        "example": "3"
                    },
                    "links": {
                        "title": "links",
                        "type": "array",
                        "items": {
                            "properties": {
                                "url": {
                                    "title": "url",
                                    "type": "string",
                                    "example": "http://localhost:8080/api/merchant-customers?page=2"
                                },
                                "label": {
                                    "title": "label",
                                    "type": "string",
                                    "example": "1"
                                },
                                "active": {
                                    "title": "active",
                                    "type": "boolean",
                                    "example": "true"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "Serie": {
                "title": "Serie",
                "description": "Serie model",
                "required": [],
                "properties": {
                    "id": {
                        "title": "id",
                        "description": "id of Serie",
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "name": {
                        "title": "name",
                        "description": "name of Serie",
                        "type": "string",
                        "example": "Macbook Pro"
                    },
                    "sku": {
                        "title": "sku",
                        "description": "sku of Serie",
                        "type": "string",
                        "example": "MCBPRO2022"
                    },
                    "price": {
                        "title": "price",
                        "description": "price of Serie",
                        "type": "integer",
                        "example": "99"
                    },
                    "created_at": {
                        "title": "created_at",
                        "type": "dateTime",
                        "readOnly": "true",
                        "example": "2022-07-04T02:41:42.336Z"
                    },
                    "updated_at": {
                        "title": "updated_at",
                        "type": "dateTime",
                        "readOnly": "true",
                        "example": "2022-07-04T02:41:42.336Z"
                    }
                },
                "type": "object"
            },
            "Series": {
                "title": "Series list",
                "properties": {
                    "data": {
                        "title": "data",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Serie"
                        }
                    },
                    "first_page_url": {
                        "title": "first_page_url",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers?page=1"
                    },
                    "last_page_url": {
                        "title": "last_page_url",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers?page=3"
                    },
                    "prev_page_url": {
                        "title": "prev_page_url",
                        "type": "string",
                        "example": "null"
                    },
                    "next_page_url": {
                        "title": "next_page_url",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers?page=2"
                    },
                    "current_page": {
                        "title": "current_page",
                        "type": "integer",
                        "example": "1"
                    },
                    "from": {
                        "title": "from",
                        "type": "integer",
                        "example": "1"
                    },
                    "last_page": {
                        "title": "last_page",
                        "type": "integer",
                        "example": "3"
                    },
                    "path": {
                        "title": "path",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers"
                    },
                    "per_page": {
                        "title": "per_page",
                        "type": "integer",
                        "example": "1"
                    },
                    "total": {
                        "title": "total",
                        "type": "integer",
                        "example": "3"
                    },
                    "links": {
                        "title": "links",
                        "type": "array",
                        "items": {
                            "properties": {
                                "url": {
                                    "title": "url",
                                    "type": "string",
                                    "example": "http://localhost:8080/api/merchant-customers?page=2"
                                },
                                "label": {
                                    "title": "label",
                                    "type": "string",
                                    "example": "1"
                                },
                                "active": {
                                    "title": "active",
                                    "type": "boolean",
                                    "example": "true"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "Status": {
                "title": "Status",
                "description": "Status model",
                "required": [],
                "properties": {
                    "id": {
                        "title": "id",
                        "description": "id of Status",
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "name": {
                        "title": "name",
                        "description": "name of Status",
                        "type": "string",
                        "example": "Macbook Pro"
                    },
                    "sku": {
                        "title": "sku",
                        "description": "sku of Status",
                        "type": "string",
                        "example": "MCBPRO2022"
                    },
                    "price": {
                        "title": "price",
                        "description": "price of Status",
                        "type": "integer",
                        "example": "99"
                    },
                    "created_at": {
                        "title": "created_at",
                        "type": "dateTime",
                        "readOnly": "true",
                        "example": "2022-07-04T02:41:42.336Z"
                    },
                    "updated_at": {
                        "title": "updated_at",
                        "type": "dateTime",
                        "readOnly": "true",
                        "example": "2022-07-04T02:41:42.336Z"
                    }
                },
                "type": "object"
            },
            "Statuss": {
                "title": "Statuss list",
                "properties": {
                    "data": {
                        "title": "data",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Status"
                        }
                    },
                    "first_page_url": {
                        "title": "first_page_url",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers?page=1"
                    },
                    "last_page_url": {
                        "title": "last_page_url",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers?page=3"
                    },
                    "prev_page_url": {
                        "title": "prev_page_url",
                        "type": "string",
                        "example": "null"
                    },
                    "next_page_url": {
                        "title": "next_page_url",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers?page=2"
                    },
                    "current_page": {
                        "title": "current_page",
                        "type": "integer",
                        "example": "1"
                    },
                    "from": {
                        "title": "from",
                        "type": "integer",
                        "example": "1"
                    },
                    "last_page": {
                        "title": "last_page",
                        "type": "integer",
                        "example": "3"
                    },
                    "path": {
                        "title": "path",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers"
                    },
                    "per_page": {
                        "title": "per_page",
                        "type": "integer",
                        "example": "1"
                    },
                    "total": {
                        "title": "total",
                        "type": "integer",
                        "example": "3"
                    },
                    "links": {
                        "title": "links",
                        "type": "array",
                        "items": {
                            "properties": {
                                "url": {
                                    "title": "url",
                                    "type": "string",
                                    "example": "http://localhost:8080/api/merchant-customers?page=2"
                                },
                                "label": {
                                    "title": "label",
                                    "type": "string",
                                    "example": "1"
                                },
                                "active": {
                                    "title": "active",
                                    "type": "boolean",
                                    "example": "true"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "Studio": {
                "title": "Studio",
                "description": "Studio model",
                "required": [],
                "properties": {
                    "id": {
                        "title": "id",
                        "description": "id of Studio",
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "name": {
                        "title": "name",
                        "description": "name of Studio",
                        "type": "string",
                        "example": "Macbook Pro"
                    },
                    "sku": {
                        "title": "sku",
                        "description": "sku of Studio",
                        "type": "string",
                        "example": "MCBPRO2022"
                    },
                    "price": {
                        "title": "price",
                        "description": "price of Studio",
                        "type": "integer",
                        "example": "99"
                    },
                    "created_at": {
                        "title": "created_at",
                        "type": "dateTime",
                        "readOnly": "true",
                        "example": "2022-07-04T02:41:42.336Z"
                    },
                    "updated_at": {
                        "title": "updated_at",
                        "type": "dateTime",
                        "readOnly": "true",
                        "example": "2022-07-04T02:41:42.336Z"
                    }
                },
                "type": "object"
            },
            "Studios": {
                "title": "Studios list",
                "properties": {
                    "data": {
                        "title": "data",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Studio"
                        }
                    },
                    "first_page_url": {
                        "title": "first_page_url",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers?page=1"
                    },
                    "last_page_url": {
                        "title": "last_page_url",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers?page=3"
                    },
                    "prev_page_url": {
                        "title": "prev_page_url",
                        "type": "string",
                        "example": "null"
                    },
                    "next_page_url": {
                        "title": "next_page_url",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers?page=2"
                    },
                    "current_page": {
                        "title": "current_page",
                        "type": "integer",
                        "example": "1"
                    },
                    "from": {
                        "title": "from",
                        "type": "integer",
                        "example": "1"
                    },
                    "last_page": {
                        "title": "last_page",
                        "type": "integer",
                        "example": "3"
                    },
                    "path": {
                        "title": "path",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers"
                    },
                    "per_page": {
                        "title": "per_page",
                        "type": "integer",
                        "example": "1"
                    },
                    "total": {
                        "title": "total",
                        "type": "integer",
                        "example": "3"
                    },
                    "links": {
                        "title": "links",
                        "type": "array",
                        "items": {
                            "properties": {
                                "url": {
                                    "title": "url",
                                    "type": "string",
                                    "example": "http://localhost:8080/api/merchant-customers?page=2"
                                },
                                "label": {
                                    "title": "label",
                                    "type": "string",
                                    "example": "1"
                                },
                                "active": {
                                    "title": "active",
                                    "type": "boolean",
                                    "example": "true"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "Tag": {
                "title": "Tag",
                "description": "Tag model",
                "required": [],
                "properties": {
                    "id": {
                        "title": "id",
                        "description": "id of Tag",
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "name": {
                        "title": "name",
                        "description": "name of Tag",
                        "type": "string",
                        "example": "Macbook Pro"
                    },
                    "sku": {
                        "title": "sku",
                        "description": "sku of Tag",
                        "type": "string",
                        "example": "MCBPRO2022"
                    },
                    "price": {
                        "title": "price",
                        "description": "price of Tag",
                        "type": "integer",
                        "example": "99"
                    },
                    "created_at": {
                        "title": "created_at",
                        "type": "dateTime",
                        "readOnly": "true",
                        "example": "2022-07-04T02:41:42.336Z"
                    },
                    "updated_at": {
                        "title": "updated_at",
                        "type": "dateTime",
                        "readOnly": "true",
                        "example": "2022-07-04T02:41:42.336Z"
                    }
                },
                "type": "object"
            },
            "Tags": {
                "title": "Tags list",
                "properties": {
                    "data": {
                        "title": "data",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Tag"
                        }
                    },
                    "first_page_url": {
                        "title": "first_page_url",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers?page=1"
                    },
                    "last_page_url": {
                        "title": "last_page_url",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers?page=3"
                    },
                    "prev_page_url": {
                        "title": "prev_page_url",
                        "type": "string",
                        "example": "null"
                    },
                    "next_page_url": {
                        "title": "next_page_url",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers?page=2"
                    },
                    "current_page": {
                        "title": "current_page",
                        "type": "integer",
                        "example": "1"
                    },
                    "from": {
                        "title": "from",
                        "type": "integer",
                        "example": "1"
                    },
                    "last_page": {
                        "title": "last_page",
                        "type": "integer",
                        "example": "3"
                    },
                    "path": {
                        "title": "path",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers"
                    },
                    "per_page": {
                        "title": "per_page",
                        "type": "integer",
                        "example": "1"
                    },
                    "total": {
                        "title": "total",
                        "type": "integer",
                        "example": "3"
                    },
                    "links": {
                        "title": "links",
                        "type": "array",
                        "items": {
                            "properties": {
                                "url": {
                                    "title": "url",
                                    "type": "string",
                                    "example": "http://localhost:8080/api/merchant-customers?page=2"
                                },
                                "label": {
                                    "title": "label",
                                    "type": "string",
                                    "example": "1"
                                },
                                "active": {
                                    "title": "active",
                                    "type": "boolean",
                                    "example": "true"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "User": {
                "title": "User",
                "description": "User model",
                "required": [],
                "properties": {
                    "id": {
                        "title": "id",
                        "description": "id of User",
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "first_name": {
                        "title": "first_name",
                        "description": "first_name of User",
                        "type": "string",
                        "example": "Lorem"
                    },
                    "last_name": {
                        "title": "last_name",
                        "description": "last_name of User",
                        "type": "string",
                        "example": "Lorem"
                    },
                    "middle_name": {
                        "title": "middle_name",
                        "description": "middle_name of User",
                        "type": "string",
                        "example": "Lorem"
                    },
                    "username": {
                        "title": "username",
                        "description": "username of User",
                        "type": "string",
                        "example": "example"
                    },
                    "roles": {
                        "title": "roles",
                        "type": "array",
                        "items": {
                            "properties": {
                                "id": {
                                    "title": "id",
                                    "description": "id of Role",
                                    "type": "integer",
                                    "readOnly": "true",
                                    "example": "1"
                                },
                                "role": {
                                    "title": "role",
                                    "description": "Name of Role",
                                    "type": "string",
                                    "readOnly": "true",
                                    "example": "Merchant"
                                },
                                "status": {
                                    "title": "status",
                                    "description": "Status of Role",
                                    "type": "integer",
                                    "readOnly": "true",
                                    "example": "20"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "created_at": {
                        "title": "created_at",
                        "type": "dateTime",
                        "readOnly": "true",
                        "example": "2022-07-04T02:41:42.336Z"
                    },
                    "updated_at": {
                        "title": "updated_at",
                        "type": "dateTime",
                        "readOnly": "true",
                        "example": "2022-07-04T02:41:42.336Z"
                    }
                },
                "type": "object"
            },
            "Users": {
                "title": "Users",
                "properties": {
                    "data": {
                        "title": "data",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/User"
                        }
                    },
                    "links": {
                        "title": "links",
                        "properties": {
                            "first": {
                                "title": "first",
                                "type": "string",
                                "example": "http://localhost:8080/api/users?page=1"
                            },
                            "last": {
                                "title": "last",
                                "type": "string",
                                "example": "http://localhost:8080/api/users?page=3"
                            },
                            "prev": {
                                "title": "prev",
                                "type": "string",
                                "example": "null"
                            },
                            "next": {
                                "title": "next",
                                "type": "string",
                                "example": "http://localhost:8080/api/users?page=2"
                            }
                        },
                        "type": "object"
                    },
                    "meta": {
                        "title": "meta",
                        "properties": {
                            "current_page": {
                                "title": "current_page",
                                "type": "integer",
                                "example": "1"
                            },
                            "from": {
                                "title": "from",
                                "type": "integer",
                                "example": "1"
                            },
                            "last_page": {
                                "title": "last_page",
                                "type": "integer",
                                "example": "3"
                            },
                            "path": {
                                "title": "path",
                                "type": "string",
                                "example": "http://localhost:8080/api/users"
                            },
                            "per_page": {
                                "title": "per_page",
                                "type": "integer",
                                "example": "1"
                            },
                            "total": {
                                "title": "total",
                                "type": "integer",
                                "example": "3"
                            },
                            "links": {
                                "title": "links",
                                "type": "array",
                                "items": {
                                    "properties": {
                                        "url": {
                                            "title": "url",
                                            "type": "string",
                                            "example": "http://localhost:8080/api/users?page=2"
                                        },
                                        "label": {
                                            "title": "label",
                                            "type": "string",
                                            "example": "1"
                                        },
                                        "active": {
                                            "title": "active",
                                            "type": "boolean",
                                            "example": "true"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "UserRoles": {
                "title": "User Role",
                "description": "UserRoles model",
                "required": [],
                "properties": {
                    "id": {
                        "title": "id",
                        "description": "id of Role",
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "name": {
                        "title": "role_code",
                        "description": "name of Role",
                        "type": "string",
                        "example": "admin"
                    },
                    "user_id": {
                        "title": "user_id",
                        "description": "user_id of Role",
                        "type": "integer",
                        "example": "1"
                    },
                    "role_id": {
                        "title": "role_id",
                        "description": "role_id of Role",
                        "type": "integer",
                        "example": "1"
                    },
                    "status": {
                        "title": "status",
                        "description": "id of user",
                        "type": "integer",
                        "example": "10"
                    },
                    "created_at": {
                        "title": "created_at",
                        "type": "dateTime",
                        "readOnly": "true",
                        "example": "2022-07-04T02:41:42.336Z"
                    },
                    "updated_at": {
                        "title": "updated_at",
                        "type": "dateTime",
                        "readOnly": "true",
                        "example": "2022-07-04T02:41:42.336Z"
                    }
                },
                "type": "object"
            }
        },
        "parameters": {
            "Actor--id": {
                "name": "Actor_id",
                "in": "path",
                "description": "Id of Actor",
                "required": true,
                "schema": {
                    "type": "integer",
                    "example": "1"
                }
            },
            "AwardsPhoto--id": {
                "name": "AwardsPhoto_id",
                "in": "path",
                "description": "Id of AwardsPhoto",
                "required": true,
                "schema": {
                    "type": "integer",
                    "example": "1"
                }
            },
            "Category--id": {
                "name": "Category_id",
                "in": "path",
                "description": "Id of Category",
                "required": true,
                "schema": {
                    "type": "integer",
                    "example": "1"
                }
            },
            "Country--id": {
                "name": "Country_id",
                "in": "path",
                "description": "Id of Country",
                "required": true,
                "schema": {
                    "type": "integer",
                    "example": "1"
                }
            },
            "CrudGenerator--id": {
                "name": "CrudGenerator_id",
                "in": "path",
                "description": "Id of CrudGenerator",
                "required": true,
                "schema": {
                    "type": "integer",
                    "example": "1"
                }
            },
            "EmailVerificationCode--id": {
                "name": "EmailVerificationCode_id",
                "in": "path",
                "description": "Id of EmailVerificationCode",
                "required": true,
                "schema": {
                    "type": "integer",
                    "example": "1"
                }
            },
            "Genre--id": {
                "name": "Genre_id",
                "in": "path",
                "description": "Id of Genre",
                "required": true,
                "schema": {
                    "type": "integer",
                    "example": "1"
                }
            },
            "LatestNew--id": {
                "name": "LatestNew_id",
                "in": "path",
                "description": "Id of LatestNew",
                "required": true,
                "schema": {
                    "type": "integer",
                    "example": "1"
                }
            },
            "LatestNewsComentary--id": {
                "name": "LatestNewsComentary_id",
                "in": "path",
                "description": "Id of LatestNewsComentary",
                "required": true,
                "schema": {
                    "type": "integer",
                    "example": "1"
                }
            },
            "Movie--id": {
                "name": "Movie_id",
                "in": "path",
                "description": "Id of Movie",
                "required": true,
                "schema": {
                    "type": "integer",
                    "example": "1"
                }
            },
            "Post--id": {
                "name": "Post_id",
                "in": "path",
                "description": "Id of Post",
                "required": true,
                "schema": {
                    "type": "integer",
                    "example": "1"
                }
            },
            "PostComentary--id": {
                "name": "PostComentary_id",
                "in": "path",
                "description": "Id of PostComentary",
                "required": true,
                "schema": {
                    "type": "integer",
                    "example": "1"
                }
            },
            "Profession--id": {
                "name": "Profession_id",
                "in": "path",
                "description": "Id of Profession",
                "required": true,
                "schema": {
                    "type": "integer",
                    "example": "1"
                }
            },
            "Rating--id": {
                "name": "Rating_id",
                "in": "path",
                "description": "Id of Rating",
                "required": true,
                "schema": {
                    "type": "integer",
                    "example": "1"
                }
            },
            "Serie--id": {
                "name": "Serie_id",
                "in": "path",
                "description": "Id of Serie",
                "required": true,
                "schema": {
                    "type": "integer",
                    "example": "1"
                }
            },
            "Status--id": {
                "name": "Status_id",
                "in": "path",
                "description": "Id of Status",
                "required": true,
                "schema": {
                    "type": "integer",
                    "example": "1"
                }
            },
            "Studio--id": {
                "name": "Studio_id",
                "in": "path",
                "description": "Id of Studio",
                "required": true,
                "schema": {
                    "type": "integer",
                    "example": "1"
                }
            },
            "Tag--id": {
                "name": "Tag_id",
                "in": "path",
                "description": "Id of Tag",
                "required": true,
                "schema": {
                    "type": "integer",
                    "example": "1"
                }
            },
            "User--id": {
                "name": "user_id",
                "in": "path",
                "description": "Id of User",
                "required": true,
                "schema": {
                    "type": "integer",
                    "example": "1"
                }
            },
            "Role--id": {
                "name": "Role_id",
                "in": "path",
                "description": "Id of Role",
                "required": true,
                "schema": {
                    "type": "integer",
                    "example": "1"
                }
            }
        },
        "securitySchemes": {
            "sanctum": {
                "type": "apiKey",
                "description": "Enter token in format (Bearer <token>)",
                "name": "Authorization",
                "in": "header"
            }
        }
    }
}